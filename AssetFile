output "target/assets"

require "rake-pipeline-web-filters"
require 'fileutils'
FileUtils.rm_rf 'tmp'
FileUtils.rm_rf 'target/assets'

VERSION = ENV['VERSION']

input "src/main/web" do
    match "css/**/*.css" do
        filter(Rake::Pipeline::OrderingConcatFilter, [
            "css/main.css"
        ], "css/codewright.css")
        if ENV['RAKEP_ENV'] == "production"
            yui_css
            concat "css/codewright-#{VERSION}.css"
        end
    end

    if ENV['RAKEP_ENV'] == "production"
        match "js/thirdparty-prod/*.js" do
            filter(Rake::Pipeline::OrderingConcatFilter, [
                "js/thirdparty-prod/jquery-2.0.2.min.js",
                "js/thirdparty-prod/handlebars-1.0.0-rc.4.js",
                "js/thirdparty-prod/ember-1.0.0-rc.5.min.js",
                "js/thirdparty-prod/bootstrap-20130531.min.js",
                "js/thirdparty-prod/minispade.js"
            ], "js/thirdparty-#{VERSION}.js")
        end
    else
        match "js/thirdparty/*.js" do
            filter(Rake::Pipeline::OrderingConcatFilter, [
                "js/thirdparty/jquery-2.0.2.js",
                "js/thirdparty/handlebars-1.0.0-rc.4.js",
                "js/thirdparty/ember-1.0.0-rc.5.js",
                "js/thirdparty/bootstrap-20130531.js",
                "js/thirdparty/minispade.js"
            ], "js/thirdparty.js")
        end
    end

    match "js/codewright/**/*.js" do
        minispade(
            :rewrite_requires => true,
            :string => false,
            :module_id_generator => Proc.new { |input|
                input.path.dup.sub(/\.js$/, '').sub(/js\//, '')
            }
        )
    end
    match /js\/codewright\/*.js/ do
        if ENV['RAKEP_ENV'] == "production"
            uglify
            concat "js/codewright-#{VERSION}.js"
        else
            concat "js/codewright.js"
        end
    end

    match /^(?!(.*iml|js\/thirdparty)).*/ do
        copy
    end
end
